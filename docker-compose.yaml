
version: "3.8"

services:
  scraper:
    build: ./scrapper
    container_name: waze_scraper
    volumes:
      - ./scrapper:/app
    command: bash -c "python scrapper.py && tail -f /dev/null"

  mongo:
    image: mongo:latest
    container_name: waze_mongo
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=dumbuser
      - MONGO_INITDB_ROOT_PASSWORD=dumbpassword

  data_filtering:
    build: ./data_filtering
    environment:
      - MONGO_USER=dumbuser
      - MONGO_PASS=dumbpassword
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_DB=admin
      - MONGO_COLLECTION=alerts
      - OUTPUT_FILE=/data/clean/incidents_clean.csv
    depends_on:
      - mongo
    volumes:
      - ./data:/data
      - ./data_filtering:/app

  data_processing:
    build: ./data_processing
    volumes:
      - ./data:/data
      - ./data_processing:/app

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  uploader:
    build:
      context: ./visualization
    container_name: data_uploader
    depends_on:
      - elasticsearch
    volumes:
      - ./data:/data
      - ./visualization:/app
    command: ["python", "uploader.py"]

volumes:
  mongo_data:
  esdata:
